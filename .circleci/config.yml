defaults: &defaults
  docker:
    - image: circleci/node:9.10.0

version: 2
jobs:
  build:
    <<: *defaults
    steps:
      - checkout
      - setup_remote_docker
      - run:
          name: Install packages
          command: yarn install
      - run:
          name: Run tests
          command: yarn test
      - run:
          name: Push Coverage to CodeClimate
          command: |
            for pid in `ps aux | grep 'istanbul' | grep -v grep | awk '{print $2}'` ; do kill -INT $pid ; done
            node_modules/.bin/istanbul-combine -d coverage -p both -r lcov -r html coverage/unit/coverage-final.json coverage/coverage.json
            node_modules/.bin/gulp codeclimate
  deploy:
    <<: *defaults
    environment:
        GOOGLE_PROJECT_ID: bench-projects
        GOOGLE_COMPUTE_ZONE: europe-west1-b
    steps:
      - checkout
      - setup_remote_docker
      - run:
          name: Build application artifacts
          command: |
            sudo yarn add webpack-cli webpack@3.8.1
            yarn install
            yarn build
      - run:
          name: Build and deploy
          command: |
            bash ./.circleci/deploy.sh
    build:
      docker:
        - image: circleci/node:9.10.0

      steps:
        - checkout
        - setup_remote_docker
        - run:
            name: Install packages
            command: yarn install
        - run:
            name: Run tests
            command: yarn test
        - run:
            name: Push Coverage to CodeClimate
            command: |
              for pid in `ps aux | grep 'istanbul' | grep -v grep | awk '{print $2}'` ; do kill -INT $pid ; done
              node_modules/.bin/istanbul-combine -d coverage -p both -r lcov -r html coverage/unit/coverage-final.json coverage/coverage.json
              node_modules/.bin/gulp codeclimate
    deploy:
        docker:
            - image: circleci/node:9.10.0
        environment:
            GOOGLE_PROJECT_ID: bench-projects
            GOOGLE_COMPUTE_ZONE: europe-west1-b
        steps:
            - checkout
            - setup_remote_docker
            - run:
                name: Build application artifacts
                command: |
                    sudo yarn add webpack-cli webpack@3.8.1
                    yarn install
                    yarn build
            - run:
                name: Build and deploy
                command: |
                    chmod +x .circleci/deploy.sh
                    ./.circleci/deploy.sh

workflows:
  version: 2
  build-deploy:
    jobs:
      - build
      - deploy:
          requires:
            - build
          filters:
            branches:
              only:
                - master
                - staging
